// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BBPacks.proto

#ifndef PROTOBUF_BBPacks_2eproto__INCLUDED
#define PROTOBUF_BBPacks_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ProtobufPackets {
	class PackA0;
	class PackA0DefaultTypeInternal;
	extern PackA0DefaultTypeInternal _PackA0_default_instance_;
	class PackA1;
	class PackA1DefaultTypeInternal;
	extern PackA1DefaultTypeInternal _PackA1_default_instance_;
	class PackA2;
	class PackA2DefaultTypeInternal;
	extern PackA2DefaultTypeInternal _PackA2_default_instance_;
	class PackA3;
	class PackA3DefaultTypeInternal;
	extern PackA3DefaultTypeInternal _PackA3_default_instance_;
	class PackA4;
	class PackA4DefaultTypeInternal;
	extern PackA4DefaultTypeInternal _PackA4_default_instance_;
	class PackA5;
	class PackA5DefaultTypeInternal;
	extern PackA5DefaultTypeInternal _PackA5_default_instance_;
	class PackA6;
	class PackA6DefaultTypeInternal;
	extern PackA6DefaultTypeInternal _PackA6_default_instance_;
	class PackA7;
	class PackA7DefaultTypeInternal;
	extern PackA7DefaultTypeInternal _PackA7_default_instance_;
	class PackA8;
	class PackA8DefaultTypeInternal;
	extern PackA8DefaultTypeInternal _PackA8_default_instance_;
	class PackB0;
	class PackB0DefaultTypeInternal;
	extern PackB0DefaultTypeInternal _PackB0_default_instance_;
	class PackB1;
	class PackB1DefaultTypeInternal;
	extern PackB1DefaultTypeInternal _PackB1_default_instance_;
	class PackB2;
	class PackB2DefaultTypeInternal;
	extern PackB2DefaultTypeInternal _PackB2_default_instance_;
	class PackB3;
	class PackB3DefaultTypeInternal;
	extern PackB3DefaultTypeInternal _PackB3_default_instance_;
	class PackB4;
	class PackB4DefaultTypeInternal;
	extern PackB4DefaultTypeInternal _PackB4_default_instance_;
	class PackB5;
	class PackB5DefaultTypeInternal;
	extern PackB5DefaultTypeInternal _PackB5_default_instance_;
}  // namespace ProtobufPackets

namespace ProtobufPackets {
	// Internal implementation detail -- do not call these.
	void protobuf_AddDesc_BBPacks_2eproto();
	void protobuf_InitDefaults_BBPacks_2eproto();

	// ===================================================================

	class PackA0 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA0) */ {
	public:
		PackA0();
		virtual ~PackA0();

		PackA0(const PackA0& from);

		inline PackA0& operator=(const PackA0& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA0& default_instance();

		static inline const PackA0* internal_default_instance() {
			return reinterpret_cast<const PackA0*>(
				&_PackA0_default_instance_);
		}

		void Swap(PackA0* other);

		// implements Message ----------------------------------------------

		inline PackA0* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA0* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA0& from);
		void MergeFrom(const PackA0& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA0* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string name = 1;
		void clear_name();
		static const int kNameFieldNumber = 1;
		const ::std::string& name() const;
		void set_name(const ::std::string& value);
		void set_name(const char* value);
		void set_name(const char* value, size_t size);
		::std::string* mutable_name();
		::std::string* release_name();
		void set_allocated_name(::std::string* name);

		// string pwd = 2;
		void clear_pwd();
		static const int kPwdFieldNumber = 2;
		const ::std::string& pwd() const;
		void set_pwd(const ::std::string& value);
		void set_pwd(const char* value);
		void set_pwd(const char* value, size_t size);
		::std::string* mutable_pwd();
		::std::string* release_pwd();
		void set_allocated_pwd(::std::string* pwd);

		// string email = 3;
		void clear_email();
		static const int kEmailFieldNumber = 3;
		const ::std::string& email() const;
		void set_email(const ::std::string& value);
		void set_email(const char* value);
		void set_email(const char* value, size_t size);
		::std::string* mutable_email();
		::std::string* release_email();
		void set_allocated_email(::std::string* email);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA0)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr name_;
		::google::protobuf::internal::ArenaStringPtr pwd_;
		::google::protobuf::internal::ArenaStringPtr email_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA1) */ {
	public:
		PackA1();
		virtual ~PackA1();

		PackA1(const PackA1& from);

		inline PackA1& operator=(const PackA1& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA1& default_instance();

		static inline const PackA1* internal_default_instance() {
			return reinterpret_cast<const PackA1*>(
				&_PackA1_default_instance_);
		}

		void Swap(PackA1* other);

		// implements Message ----------------------------------------------

		inline PackA1* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA1& from);
		void MergeFrom(const PackA1& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA1* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string pwdToken = 1;
		void clear_pwdtoken();
		static const int kPwdTokenFieldNumber = 1;
		const ::std::string& pwdtoken() const;
		void set_pwdtoken(const ::std::string& value);
		void set_pwdtoken(const char* value);
		void set_pwdtoken(const char* value, size_t size);
		::std::string* mutable_pwdtoken();
		::std::string* release_pwdtoken();
		void set_allocated_pwdtoken(::std::string* pwdtoken);

		// uint32 eID = 2;
		void clear_eid();
		static const int kEIDFieldNumber = 2;
		::google::protobuf::uint32 eid() const;
		void set_eid(::google::protobuf::uint32 value);

		// uint32 deviceID = 3;
		void clear_deviceid();
		static const int kDeviceIDFieldNumber = 3;
		::google::protobuf::uint32 deviceid() const;
		void set_deviceid(::google::protobuf::uint32 value);

		// string msg = 4;
		void clear_msg();
		static const int kMsgFieldNumber = 4;
		const ::std::string& msg() const;
		void set_msg(const ::std::string& value);
		void set_msg(const char* value);
		void set_msg(const char* value, size_t size);
		::std::string* mutable_msg();
		::std::string* release_msg();
		void set_allocated_msg(::std::string* msg);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA1)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr pwdtoken_;
		::google::protobuf::internal::ArenaStringPtr msg_;
		::google::protobuf::uint32 eid_;
		::google::protobuf::uint32 deviceid_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA2) */ {
	public:
		PackA2();
		virtual ~PackA2();

		PackA2(const PackA2& from);

		inline PackA2& operator=(const PackA2& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA2& default_instance();

		static inline const PackA2* internal_default_instance() {
			return reinterpret_cast<const PackA2*>(
				&_PackA2_default_instance_);
		}

		void Swap(PackA2* other);

		// implements Message ----------------------------------------------

		inline PackA2* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA2& from);
		void MergeFrom(const PackA2& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA2* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// uint32 eID = 1;
		void clear_eid();
		static const int kEIDFieldNumber = 1;
		::google::protobuf::uint32 eid() const;
		void set_eid(::google::protobuf::uint32 value);

		// string pwdToken = 2;
		void clear_pwdtoken();
		static const int kPwdTokenFieldNumber = 2;
		const ::std::string& pwdtoken() const;
		void set_pwdtoken(const ::std::string& value);
		void set_pwdtoken(const char* value);
		void set_pwdtoken(const char* value, size_t size);
		::std::string* mutable_pwdtoken();
		::std::string* release_pwdtoken();
		void set_allocated_pwdtoken(::std::string* pwdtoken);

		// int32 deviceID = 3;
		void clear_deviceid();
		static const int kDeviceIDFieldNumber = 3;
		::google::protobuf::int32 deviceid() const;
		void set_deviceid(::google::protobuf::int32 value);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA2)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr pwdtoken_;
		::google::protobuf::uint32 eid_;
		::google::protobuf::int32 deviceid_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA3) */ {
	public:
		PackA3();
		virtual ~PackA3();

		PackA3(const PackA3& from);

		inline PackA3& operator=(const PackA3& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA3& default_instance();

		static inline const PackA3* internal_default_instance() {
			return reinterpret_cast<const PackA3*>(
				&_PackA3_default_instance_);
		}

		void Swap(PackA3* other);

		// implements Message ----------------------------------------------

		inline PackA3* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA3* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA3& from);
		void MergeFrom(const PackA3& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA3* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string name = 1;
		void clear_name();
		static const int kNameFieldNumber = 1;
		const ::std::string& name() const;
		void set_name(const ::std::string& value);
		void set_name(const char* value);
		void set_name(const char* value, size_t size);
		::std::string* mutable_name();
		::std::string* release_name();
		void set_allocated_name(::std::string* name);

		// string pwd = 2;
		void clear_pwd();
		static const int kPwdFieldNumber = 2;
		const ::std::string& pwd() const;
		void set_pwd(const ::std::string& value);
		void set_pwd(const char* value);
		void set_pwd(const char* value, size_t size);
		::std::string* mutable_pwd();
		::std::string* release_pwd();
		void set_allocated_pwd(::std::string* pwd);

		// int32 deviceID = 3;
		void clear_deviceid();
		static const int kDeviceIDFieldNumber = 3;
		::google::protobuf::int32 deviceid() const;
		void set_deviceid(::google::protobuf::int32 value);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA3)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr name_;
		::google::protobuf::internal::ArenaStringPtr pwd_;
		::google::protobuf::int32 deviceid_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA4 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA4) */ {
	public:
		PackA4();
		virtual ~PackA4();

		PackA4(const PackA4& from);

		inline PackA4& operator=(const PackA4& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA4& default_instance();

		static inline const PackA4* internal_default_instance() {
			return reinterpret_cast<const PackA4*>(
				&_PackA4_default_instance_);
		}

		void Swap(PackA4* other);

		// implements Message ----------------------------------------------

		inline PackA4* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA4* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA4& from);
		void MergeFrom(const PackA4& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA4* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string email = 1;
		void clear_email();
		static const int kEmailFieldNumber = 1;
		const ::std::string& email() const;
		void set_email(const ::std::string& value);
		void set_email(const char* value);
		void set_email(const char* value, size_t size);
		::std::string* mutable_email();
		::std::string* release_email();
		void set_allocated_email(::std::string* email);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA4)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr email_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA5 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA5) */ {
	public:
		PackA5();
		virtual ~PackA5();

		PackA5(const PackA5& from);

		inline PackA5& operator=(const PackA5& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA5& default_instance();

		static inline const PackA5* internal_default_instance() {
			return reinterpret_cast<const PackA5*>(
				&_PackA5_default_instance_);
		}

		void Swap(PackA5* other);

		// implements Message ----------------------------------------------

		inline PackA5* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA5* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA5& from);
		void MergeFrom(const PackA5& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA5* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// bool success = 1;
		void clear_success();
		static const int kSuccessFieldNumber = 1;
		bool success() const;
		void set_success(bool value);

		// string msg = 2;
		void clear_msg();
		static const int kMsgFieldNumber = 2;
		const ::std::string& msg() const;
		void set_msg(const ::std::string& value);
		void set_msg(const char* value);
		void set_msg(const char* value, size_t size);
		::std::string* mutable_msg();
		::std::string* release_msg();
		void set_allocated_msg(::std::string* msg);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA5)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr msg_;
		bool success_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA6 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA6) */ {
	public:
		PackA6();
		virtual ~PackA6();

		PackA6(const PackA6& from);

		inline PackA6& operator=(const PackA6& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA6& default_instance();

		static inline const PackA6* internal_default_instance() {
			return reinterpret_cast<const PackA6*>(
				&_PackA6_default_instance_);
		}

		void Swap(PackA6* other);

		// implements Message ----------------------------------------------

		inline PackA6* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA6* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA6& from);
		void MergeFrom(const PackA6& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA6* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string pwdResetToken = 1;
		void clear_pwdresettoken();
		static const int kPwdResetTokenFieldNumber = 1;
		const ::std::string& pwdresettoken() const;
		void set_pwdresettoken(const ::std::string& value);
		void set_pwdresettoken(const char* value);
		void set_pwdresettoken(const char* value, size_t size);
		::std::string* mutable_pwdresettoken();
		::std::string* release_pwdresettoken();
		void set_allocated_pwdresettoken(::std::string* pwdresettoken);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA6)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr pwdresettoken_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA7 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA7) */ {
	public:
		PackA7();
		virtual ~PackA7();

		PackA7(const PackA7& from);

		inline PackA7& operator=(const PackA7& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA7& default_instance();

		static inline const PackA7* internal_default_instance() {
			return reinterpret_cast<const PackA7*>(
				&_PackA7_default_instance_);
		}

		void Swap(PackA7* other);

		// implements Message ----------------------------------------------

		inline PackA7* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA7* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA7& from);
		void MergeFrom(const PackA7& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA7* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// bool success = 1;
		void clear_success();
		static const int kSuccessFieldNumber = 1;
		bool success() const;
		void set_success(bool value);

		// string msg = 2;
		void clear_msg();
		static const int kMsgFieldNumber = 2;
		const ::std::string& msg() const;
		void set_msg(const ::std::string& value);
		void set_msg(const char* value);
		void set_msg(const char* value, size_t size);
		::std::string* mutable_msg();
		::std::string* release_msg();
		void set_allocated_msg(::std::string* msg);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA7)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr msg_;
		bool success_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackA8 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackA8) */ {
	public:
		PackA8();
		virtual ~PackA8();

		PackA8(const PackA8& from);

		inline PackA8& operator=(const PackA8& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackA8& default_instance();

		static inline const PackA8* internal_default_instance() {
			return reinterpret_cast<const PackA8*>(
				&_PackA8_default_instance_);
		}

		void Swap(PackA8* other);

		// implements Message ----------------------------------------------

		inline PackA8* New() const PROTOBUF_FINAL { return New(NULL); }

		PackA8* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackA8& from);
		void MergeFrom(const PackA8& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackA8* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string pwdResetToken = 1;
		void clear_pwdresettoken();
		static const int kPwdResetTokenFieldNumber = 1;
		const ::std::string& pwdresettoken() const;
		void set_pwdresettoken(const ::std::string& value);
		void set_pwdresettoken(const char* value);
		void set_pwdresettoken(const char* value, size_t size);
		::std::string* mutable_pwdresettoken();
		::std::string* release_pwdresettoken();
		void set_allocated_pwdresettoken(::std::string* pwdresettoken);

		// string pwd = 2;
		void clear_pwd();
		static const int kPwdFieldNumber = 2;
		const ::std::string& pwd() const;
		void set_pwd(const ::std::string& value);
		void set_pwd(const char* value);
		void set_pwd(const char* value, size_t size);
		::std::string* mutable_pwd();
		::std::string* release_pwd();
		void set_allocated_pwd(::std::string* pwd);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackA8)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr pwdresettoken_;
		::google::protobuf::internal::ArenaStringPtr pwd_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackB0 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackB0) */ {
	public:
		PackB0();
		virtual ~PackB0();

		PackB0(const PackB0& from);

		inline PackB0& operator=(const PackB0& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackB0& default_instance();

		static inline const PackB0* internal_default_instance() {
			return reinterpret_cast<const PackB0*>(
				&_PackB0_default_instance_);
		}

		void Swap(PackB0* other);

		// implements Message ----------------------------------------------

		inline PackB0* New() const PROTOBUF_FINAL { return New(NULL); }

		PackB0* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackB0& from);
		void MergeFrom(const PackB0& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackB0* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string email = 1;
		void clear_email();
		static const int kEmailFieldNumber = 1;
		const ::std::string& email() const;
		void set_email(const ::std::string& value);
		void set_email(const char* value);
		void set_email(const char* value, size_t size);
		::std::string* mutable_email();
		::std::string* release_email();
		void set_allocated_email(::std::string* email);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackB0)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr email_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackB1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackB1) */ {
	public:
		PackB1();
		virtual ~PackB1();

		PackB1(const PackB1& from);

		inline PackB1& operator=(const PackB1& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackB1& default_instance();

		static inline const PackB1* internal_default_instance() {
			return reinterpret_cast<const PackB1*>(
				&_PackB1_default_instance_);
		}

		void Swap(PackB1* other);

		// implements Message ----------------------------------------------

		inline PackB1* New() const PROTOBUF_FINAL { return New(NULL); }

		PackB1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackB1& from);
		void MergeFrom(const PackB1& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackB1* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// bool success = 1;
		void clear_success();
		static const int kSuccessFieldNumber = 1;
		bool success() const;
		void set_success(bool value);

		// string msg = 2;
		void clear_msg();
		static const int kMsgFieldNumber = 2;
		const ::std::string& msg() const;
		void set_msg(const ::std::string& value);
		void set_msg(const char* value);
		void set_msg(const char* value, size_t size);
		::std::string* mutable_msg();
		::std::string* release_msg();
		void set_allocated_msg(::std::string* msg);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackB1)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr msg_;
		bool success_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackB2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackB2) */ {
	public:
		PackB2();
		virtual ~PackB2();

		PackB2(const PackB2& from);

		inline PackB2& operator=(const PackB2& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackB2& default_instance();

		static inline const PackB2* internal_default_instance() {
			return reinterpret_cast<const PackB2*>(
				&_PackB2_default_instance_);
		}

		void Swap(PackB2* other);

		// implements Message ----------------------------------------------

		inline PackB2* New() const PROTOBUF_FINAL { return New(NULL); }

		PackB2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackB2& from);
		void MergeFrom(const PackB2& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackB2* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string emailToken = 1;
		void clear_emailtoken();
		static const int kEmailTokenFieldNumber = 1;
		const ::std::string& emailtoken() const;
		void set_emailtoken(const ::std::string& value);
		void set_emailtoken(const char* value);
		void set_emailtoken(const char* value, size_t size);
		::std::string* mutable_emailtoken();
		::std::string* release_emailtoken();
		void set_allocated_emailtoken(::std::string* emailtoken);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackB2)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr emailtoken_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackB3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackB3) */ {
	public:
		PackB3();
		virtual ~PackB3();

		PackB3(const PackB3& from);

		inline PackB3& operator=(const PackB3& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackB3& default_instance();

		static inline const PackB3* internal_default_instance() {
			return reinterpret_cast<const PackB3*>(
				&_PackB3_default_instance_);
		}

		void Swap(PackB3* other);

		// implements Message ----------------------------------------------

		inline PackB3* New() const PROTOBUF_FINAL { return New(NULL); }

		PackB3* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackB3& from);
		void MergeFrom(const PackB3& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackB3* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// bool success = 1;
		void clear_success();
		static const int kSuccessFieldNumber = 1;
		bool success() const;
		void set_success(bool value);

		// string msg = 2;
		void clear_msg();
		static const int kMsgFieldNumber = 2;
		const ::std::string& msg() const;
		void set_msg(const ::std::string& value);
		void set_msg(const char* value);
		void set_msg(const char* value, size_t size);
		::std::string* mutable_msg();
		::std::string* release_msg();
		void set_allocated_msg(::std::string* msg);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackB3)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr msg_;
		bool success_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackB4 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackB4) */ {
	public:
		PackB4();
		virtual ~PackB4();

		PackB4(const PackB4& from);

		inline PackB4& operator=(const PackB4& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackB4& default_instance();

		static inline const PackB4* internal_default_instance() {
			return reinterpret_cast<const PackB4*>(
				&_PackB4_default_instance_);
		}

		void Swap(PackB4* other);

		// implements Message ----------------------------------------------

		inline PackB4* New() const PROTOBUF_FINAL { return New(NULL); }

		PackB4* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackB4& from);
		void MergeFrom(const PackB4& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackB4* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackB4)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// -------------------------------------------------------------------

	class PackB5 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtobufPackets.PackB5) */ {
	public:
		PackB5();
		virtual ~PackB5();

		PackB5(const PackB5& from);

		inline PackB5& operator=(const PackB5& from) {
			CopyFrom(from);
			return *this;
		}

		static const ::google::protobuf::Descriptor* descriptor();
		static const PackB5& default_instance();

		static inline const PackB5* internal_default_instance() {
			return reinterpret_cast<const PackB5*>(
				&_PackB5_default_instance_);
		}

		void Swap(PackB5* other);

		// implements Message ----------------------------------------------

		inline PackB5* New() const PROTOBUF_FINAL { return New(NULL); }

		PackB5* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
		void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
		void CopyFrom(const PackB5& from);
		void MergeFrom(const PackB5& from);
		void Clear() PROTOBUF_FINAL;
		bool IsInitialized() const PROTOBUF_FINAL;

		size_t ByteSizeLong() const PROTOBUF_FINAL;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
		::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
			bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
			const PROTOBUF_FINAL {
			return InternalSerializeWithCachedSizesToArray(false, output);
		}
		int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const PROTOBUF_FINAL;
		void InternalSwap(PackB5* other);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return NULL;
		}
		inline void* MaybeArenaPtr() const {
			return NULL;
		}
	public:

		::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// string verifiedEmail = 1;
		void clear_verifiedemail();
		static const int kVerifiedEmailFieldNumber = 1;
		const ::std::string& verifiedemail() const;
		void set_verifiedemail(const ::std::string& value);
		void set_verifiedemail(const char* value);
		void set_verifiedemail(const char* value, size_t size);
		::std::string* mutable_verifiedemail();
		::std::string* release_verifiedemail();
		void set_allocated_verifiedemail(::std::string* verifiedemail);

		// string unverifiedEmail = 2;
		void clear_unverifiedemail();
		static const int kUnverifiedEmailFieldNumber = 2;
		const ::std::string& unverifiedemail() const;
		void set_unverifiedemail(const ::std::string& value);
		void set_unverifiedemail(const char* value);
		void set_unverifiedemail(const char* value, size_t size);
		::std::string* mutable_unverifiedemail();
		::std::string* release_unverifiedemail();
		void set_allocated_unverifiedemail(::std::string* unverifiedemail);

		// @@protoc_insertion_point(class_scope:ProtobufPackets.PackB5)
	private:

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		::google::protobuf::internal::ArenaStringPtr verifiedemail_;
		::google::protobuf::internal::ArenaStringPtr unverifiedemail_;
		mutable int _cached_size_;
		friend void  protobuf_InitDefaults_BBPacks_2eproto_impl();
		friend void  protobuf_AddDesc_BBPacks_2eproto_impl();
		friend const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto();
		friend void protobuf_ShutdownFile_BBPacks_2eproto();
	};
	// ===================================================================

	// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA0

// string name = 1;
	inline void PackA0::clear_name() {
		name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA0::name() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.name)
		return name_.GetNoArena();
	}
	inline void PackA0::set_name(const ::std::string& value) {
		name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.name)
	}
	inline void PackA0::set_name(const char* value) {
		name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA0.name)
	}
	inline void PackA0::set_name(const char* value, size_t size) {
		name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA0.name)
	}
	inline ::std::string* PackA0::mutable_name() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA0.name)
		return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA0::release_name() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA0.name)

		return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA0::set_allocated_name(::std::string* name) {
		if (name != NULL) {
		}
		else {
		}
		name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA0.name)
	}

	// string pwd = 2;
	inline void PackA0::clear_pwd() {
		pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA0::pwd() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.pwd)
		return pwd_.GetNoArena();
	}
	inline void PackA0::set_pwd(const ::std::string& value) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.pwd)
	}
	inline void PackA0::set_pwd(const char* value) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA0.pwd)
	}
	inline void PackA0::set_pwd(const char* value, size_t size) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA0.pwd)
	}
	inline ::std::string* PackA0::mutable_pwd() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA0.pwd)
		return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA0::release_pwd() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA0.pwd)

		return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA0::set_allocated_pwd(::std::string* pwd) {
		if (pwd != NULL) {
		}
		else {
		}
		pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA0.pwd)
	}

	// string email = 3;
	inline void PackA0::clear_email() {
		email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA0::email() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.email)
		return email_.GetNoArena();
	}
	inline void PackA0::set_email(const ::std::string& value) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.email)
	}
	inline void PackA0::set_email(const char* value) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA0.email)
	}
	inline void PackA0::set_email(const char* value, size_t size) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA0.email)
	}
	inline ::std::string* PackA0::mutable_email() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA0.email)
		return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA0::release_email() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA0.email)

		return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA0::set_allocated_email(::std::string* email) {
		if (email != NULL) {
		}
		else {
		}
		email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA0.email)
	}

	// -------------------------------------------------------------------

	// PackA1

	// string pwdToken = 1;
	inline void PackA1::clear_pwdtoken() {
		pwdtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA1::pwdtoken() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA1.pwdToken)
		return pwdtoken_.GetNoArena();
	}
	inline void PackA1::set_pwdtoken(const ::std::string& value) {
		pwdtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA1.pwdToken)
	}
	inline void PackA1::set_pwdtoken(const char* value) {
		pwdtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA1.pwdToken)
	}
	inline void PackA1::set_pwdtoken(const char* value, size_t size) {
		pwdtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA1.pwdToken)
	}
	inline ::std::string* PackA1::mutable_pwdtoken() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA1.pwdToken)
		return pwdtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA1::release_pwdtoken() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA1.pwdToken)

		return pwdtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA1::set_allocated_pwdtoken(::std::string* pwdtoken) {
		if (pwdtoken != NULL) {
		}
		else {
		}
		pwdtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwdtoken);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA1.pwdToken)
	}

	// uint32 eID = 2;
	inline void PackA1::clear_eid() {
		eid_ = 0u;
	}
	inline ::google::protobuf::uint32 PackA1::eid() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA1.eID)
		return eid_;
	}
	inline void PackA1::set_eid(::google::protobuf::uint32 value) {
		eid_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA1.eID)
	}

	// uint32 deviceID = 3;
	inline void PackA1::clear_deviceid() {
		deviceid_ = 0u;
	}
	inline ::google::protobuf::uint32 PackA1::deviceid() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA1.deviceID)
		return deviceid_;
	}
	inline void PackA1::set_deviceid(::google::protobuf::uint32 value) {
		deviceid_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA1.deviceID)
	}

	// string msg = 4;
	inline void PackA1::clear_msg() {
		msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA1::msg() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA1.msg)
		return msg_.GetNoArena();
	}
	inline void PackA1::set_msg(const ::std::string& value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA1.msg)
	}
	inline void PackA1::set_msg(const char* value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA1.msg)
	}
	inline void PackA1::set_msg(const char* value, size_t size) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA1.msg)
	}
	inline ::std::string* PackA1::mutable_msg() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA1.msg)
		return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA1::release_msg() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA1.msg)

		return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA1::set_allocated_msg(::std::string* msg) {
		if (msg != NULL) {
		}
		else {
		}
		msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA1.msg)
	}

	// -------------------------------------------------------------------

	// PackA2

	// uint32 eID = 1;
	inline void PackA2::clear_eid() {
		eid_ = 0u;
	}
	inline ::google::protobuf::uint32 PackA2::eid() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA2.eID)
		return eid_;
	}
	inline void PackA2::set_eid(::google::protobuf::uint32 value) {
		eid_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA2.eID)
	}

	// string pwdToken = 2;
	inline void PackA2::clear_pwdtoken() {
		pwdtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA2::pwdtoken() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA2.pwdToken)
		return pwdtoken_.GetNoArena();
	}
	inline void PackA2::set_pwdtoken(const ::std::string& value) {
		pwdtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA2.pwdToken)
	}
	inline void PackA2::set_pwdtoken(const char* value) {
		pwdtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA2.pwdToken)
	}
	inline void PackA2::set_pwdtoken(const char* value, size_t size) {
		pwdtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA2.pwdToken)
	}
	inline ::std::string* PackA2::mutable_pwdtoken() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA2.pwdToken)
		return pwdtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA2::release_pwdtoken() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA2.pwdToken)

		return pwdtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA2::set_allocated_pwdtoken(::std::string* pwdtoken) {
		if (pwdtoken != NULL) {
		}
		else {
		}
		pwdtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwdtoken);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA2.pwdToken)
	}

	// int32 deviceID = 3;
	inline void PackA2::clear_deviceid() {
		deviceid_ = 0;
	}
	inline ::google::protobuf::int32 PackA2::deviceid() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA2.deviceID)
		return deviceid_;
	}
	inline void PackA2::set_deviceid(::google::protobuf::int32 value) {
		deviceid_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA2.deviceID)
	}

	// -------------------------------------------------------------------

	// PackA3

	// string name = 1;
	inline void PackA3::clear_name() {
		name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA3::name() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA3.name)
		return name_.GetNoArena();
	}
	inline void PackA3::set_name(const ::std::string& value) {
		name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA3.name)
	}
	inline void PackA3::set_name(const char* value) {
		name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA3.name)
	}
	inline void PackA3::set_name(const char* value, size_t size) {
		name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA3.name)
	}
	inline ::std::string* PackA3::mutable_name() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA3.name)
		return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA3::release_name() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA3.name)

		return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA3::set_allocated_name(::std::string* name) {
		if (name != NULL) {
		}
		else {
		}
		name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA3.name)
	}

	// string pwd = 2;
	inline void PackA3::clear_pwd() {
		pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA3::pwd() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA3.pwd)
		return pwd_.GetNoArena();
	}
	inline void PackA3::set_pwd(const ::std::string& value) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA3.pwd)
	}
	inline void PackA3::set_pwd(const char* value) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA3.pwd)
	}
	inline void PackA3::set_pwd(const char* value, size_t size) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA3.pwd)
	}
	inline ::std::string* PackA3::mutable_pwd() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA3.pwd)
		return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA3::release_pwd() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA3.pwd)

		return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA3::set_allocated_pwd(::std::string* pwd) {
		if (pwd != NULL) {
		}
		else {
		}
		pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA3.pwd)
	}

	// int32 deviceID = 3;
	inline void PackA3::clear_deviceid() {
		deviceid_ = 0;
	}
	inline ::google::protobuf::int32 PackA3::deviceid() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA3.deviceID)
		return deviceid_;
	}
	inline void PackA3::set_deviceid(::google::protobuf::int32 value) {
		deviceid_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA3.deviceID)
	}

	// -------------------------------------------------------------------

	// PackA4

	// string email = 1;
	inline void PackA4::clear_email() {
		email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA4::email() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA4.email)
		return email_.GetNoArena();
	}
	inline void PackA4::set_email(const ::std::string& value) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA4.email)
	}
	inline void PackA4::set_email(const char* value) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA4.email)
	}
	inline void PackA4::set_email(const char* value, size_t size) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA4.email)
	}
	inline ::std::string* PackA4::mutable_email() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA4.email)
		return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA4::release_email() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA4.email)

		return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA4::set_allocated_email(::std::string* email) {
		if (email != NULL) {
		}
		else {
		}
		email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA4.email)
	}

	// -------------------------------------------------------------------

	// PackA5

	// bool success = 1;
	inline void PackA5::clear_success() {
		success_ = false;
	}
	inline bool PackA5::success() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA5.success)
		return success_;
	}
	inline void PackA5::set_success(bool value) {
		success_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA5.success)
	}

	// string msg = 2;
	inline void PackA5::clear_msg() {
		msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA5::msg() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA5.msg)
		return msg_.GetNoArena();
	}
	inline void PackA5::set_msg(const ::std::string& value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA5.msg)
	}
	inline void PackA5::set_msg(const char* value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA5.msg)
	}
	inline void PackA5::set_msg(const char* value, size_t size) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA5.msg)
	}
	inline ::std::string* PackA5::mutable_msg() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA5.msg)
		return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA5::release_msg() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA5.msg)

		return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA5::set_allocated_msg(::std::string* msg) {
		if (msg != NULL) {
		}
		else {
		}
		msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA5.msg)
	}

	// -------------------------------------------------------------------

	// PackA6

	// string pwdResetToken = 1;
	inline void PackA6::clear_pwdresettoken() {
		pwdresettoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA6::pwdresettoken() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA6.pwdResetToken)
		return pwdresettoken_.GetNoArena();
	}
	inline void PackA6::set_pwdresettoken(const ::std::string& value) {
		pwdresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA6.pwdResetToken)
	}
	inline void PackA6::set_pwdresettoken(const char* value) {
		pwdresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA6.pwdResetToken)
	}
	inline void PackA6::set_pwdresettoken(const char* value, size_t size) {
		pwdresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA6.pwdResetToken)
	}
	inline ::std::string* PackA6::mutable_pwdresettoken() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA6.pwdResetToken)
		return pwdresettoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA6::release_pwdresettoken() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA6.pwdResetToken)

		return pwdresettoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA6::set_allocated_pwdresettoken(::std::string* pwdresettoken) {
		if (pwdresettoken != NULL) {
		}
		else {
		}
		pwdresettoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwdresettoken);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA6.pwdResetToken)
	}

	// -------------------------------------------------------------------

	// PackA7

	// bool success = 1;
	inline void PackA7::clear_success() {
		success_ = false;
	}
	inline bool PackA7::success() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA7.success)
		return success_;
	}
	inline void PackA7::set_success(bool value) {
		success_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA7.success)
	}

	// string msg = 2;
	inline void PackA7::clear_msg() {
		msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA7::msg() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA7.msg)
		return msg_.GetNoArena();
	}
	inline void PackA7::set_msg(const ::std::string& value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA7.msg)
	}
	inline void PackA7::set_msg(const char* value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA7.msg)
	}
	inline void PackA7::set_msg(const char* value, size_t size) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA7.msg)
	}
	inline ::std::string* PackA7::mutable_msg() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA7.msg)
		return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA7::release_msg() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA7.msg)

		return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA7::set_allocated_msg(::std::string* msg) {
		if (msg != NULL) {
		}
		else {
		}
		msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA7.msg)
	}

	// -------------------------------------------------------------------

	// PackA8

	// string pwdResetToken = 1;
	inline void PackA8::clear_pwdresettoken() {
		pwdresettoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA8::pwdresettoken() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA8.pwdResetToken)
		return pwdresettoken_.GetNoArena();
	}
	inline void PackA8::set_pwdresettoken(const ::std::string& value) {
		pwdresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA8.pwdResetToken)
	}
	inline void PackA8::set_pwdresettoken(const char* value) {
		pwdresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA8.pwdResetToken)
	}
	inline void PackA8::set_pwdresettoken(const char* value, size_t size) {
		pwdresettoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA8.pwdResetToken)
	}
	inline ::std::string* PackA8::mutable_pwdresettoken() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA8.pwdResetToken)
		return pwdresettoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA8::release_pwdresettoken() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA8.pwdResetToken)

		return pwdresettoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA8::set_allocated_pwdresettoken(::std::string* pwdresettoken) {
		if (pwdresettoken != NULL) {
		}
		else {
		}
		pwdresettoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwdresettoken);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA8.pwdResetToken)
	}

	// string pwd = 2;
	inline void PackA8::clear_pwd() {
		pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackA8::pwd() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackA8.pwd)
		return pwd_.GetNoArena();
	}
	inline void PackA8::set_pwd(const ::std::string& value) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackA8.pwd)
	}
	inline void PackA8::set_pwd(const char* value) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA8.pwd)
	}
	inline void PackA8::set_pwd(const char* value, size_t size) {
		pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA8.pwd)
	}
	inline ::std::string* PackA8::mutable_pwd() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA8.pwd)
		return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackA8::release_pwd() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackA8.pwd)

		return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackA8::set_allocated_pwd(::std::string* pwd) {
		if (pwd != NULL) {
		}
		else {
		}
		pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA8.pwd)
	}

	// -------------------------------------------------------------------

	// PackB0

	// string email = 1;
	inline void PackB0::clear_email() {
		email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackB0::email() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB0.email)
		return email_.GetNoArena();
	}
	inline void PackB0::set_email(const ::std::string& value) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB0.email)
	}
	inline void PackB0::set_email(const char* value) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackB0.email)
	}
	inline void PackB0::set_email(const char* value, size_t size) {
		email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackB0.email)
	}
	inline ::std::string* PackB0::mutable_email() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackB0.email)
		return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackB0::release_email() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackB0.email)

		return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackB0::set_allocated_email(::std::string* email) {
		if (email != NULL) {
		}
		else {
		}
		email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackB0.email)
	}

	// -------------------------------------------------------------------

	// PackB1

	// bool success = 1;
	inline void PackB1::clear_success() {
		success_ = false;
	}
	inline bool PackB1::success() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB1.success)
		return success_;
	}
	inline void PackB1::set_success(bool value) {
		success_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB1.success)
	}

	// string msg = 2;
	inline void PackB1::clear_msg() {
		msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackB1::msg() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB1.msg)
		return msg_.GetNoArena();
	}
	inline void PackB1::set_msg(const ::std::string& value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB1.msg)
	}
	inline void PackB1::set_msg(const char* value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackB1.msg)
	}
	inline void PackB1::set_msg(const char* value, size_t size) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackB1.msg)
	}
	inline ::std::string* PackB1::mutable_msg() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackB1.msg)
		return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackB1::release_msg() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackB1.msg)

		return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackB1::set_allocated_msg(::std::string* msg) {
		if (msg != NULL) {
		}
		else {
		}
		msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackB1.msg)
	}

	// -------------------------------------------------------------------

	// PackB2

	// string emailToken = 1;
	inline void PackB2::clear_emailtoken() {
		emailtoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackB2::emailtoken() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB2.emailToken)
		return emailtoken_.GetNoArena();
	}
	inline void PackB2::set_emailtoken(const ::std::string& value) {
		emailtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB2.emailToken)
	}
	inline void PackB2::set_emailtoken(const char* value) {
		emailtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackB2.emailToken)
	}
	inline void PackB2::set_emailtoken(const char* value, size_t size) {
		emailtoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackB2.emailToken)
	}
	inline ::std::string* PackB2::mutable_emailtoken() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackB2.emailToken)
		return emailtoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackB2::release_emailtoken() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackB2.emailToken)

		return emailtoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackB2::set_allocated_emailtoken(::std::string* emailtoken) {
		if (emailtoken != NULL) {
		}
		else {
		}
		emailtoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailtoken);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackB2.emailToken)
	}

	// -------------------------------------------------------------------

	// PackB3

	// bool success = 1;
	inline void PackB3::clear_success() {
		success_ = false;
	}
	inline bool PackB3::success() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB3.success)
		return success_;
	}
	inline void PackB3::set_success(bool value) {
		success_ = value;
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB3.success)
	}

	// string msg = 2;
	inline void PackB3::clear_msg() {
		msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackB3::msg() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB3.msg)
		return msg_.GetNoArena();
	}
	inline void PackB3::set_msg(const ::std::string& value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB3.msg)
	}
	inline void PackB3::set_msg(const char* value) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackB3.msg)
	}
	inline void PackB3::set_msg(const char* value, size_t size) {
		msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackB3.msg)
	}
	inline ::std::string* PackB3::mutable_msg() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackB3.msg)
		return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackB3::release_msg() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackB3.msg)

		return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackB3::set_allocated_msg(::std::string* msg) {
		if (msg != NULL) {
		}
		else {
		}
		msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackB3.msg)
	}

	// -------------------------------------------------------------------

	// PackB4

	// -------------------------------------------------------------------

	// PackB5

	// string verifiedEmail = 1;
	inline void PackB5::clear_verifiedemail() {
		verifiedemail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackB5::verifiedemail() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB5.verifiedEmail)
		return verifiedemail_.GetNoArena();
	}
	inline void PackB5::set_verifiedemail(const ::std::string& value) {
		verifiedemail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB5.verifiedEmail)
	}
	inline void PackB5::set_verifiedemail(const char* value) {
		verifiedemail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackB5.verifiedEmail)
	}
	inline void PackB5::set_verifiedemail(const char* value, size_t size) {
		verifiedemail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackB5.verifiedEmail)
	}
	inline ::std::string* PackB5::mutable_verifiedemail() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackB5.verifiedEmail)
		return verifiedemail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackB5::release_verifiedemail() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackB5.verifiedEmail)

		return verifiedemail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackB5::set_allocated_verifiedemail(::std::string* verifiedemail) {
		if (verifiedemail != NULL) {
		}
		else {
		}
		verifiedemail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifiedemail);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackB5.verifiedEmail)
	}

	// string unverifiedEmail = 2;
	inline void PackB5::clear_unverifiedemail() {
		unverifiedemail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline const ::std::string& PackB5::unverifiedemail() const {
		// @@protoc_insertion_point(field_get:ProtobufPackets.PackB5.unverifiedEmail)
		return unverifiedemail_.GetNoArena();
	}
	inline void PackB5::set_unverifiedemail(const ::std::string& value) {
		unverifiedemail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
		// @@protoc_insertion_point(field_set:ProtobufPackets.PackB5.unverifiedEmail)
	}
	inline void PackB5::set_unverifiedemail(const char* value) {
		unverifiedemail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
		// @@protoc_insertion_point(field_set_char:ProtobufPackets.PackB5.unverifiedEmail)
	}
	inline void PackB5::set_unverifiedemail(const char* value, size_t size) {
		unverifiedemail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			::std::string(reinterpret_cast<const char*>(value), size));
		// @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackB5.unverifiedEmail)
	}
	inline ::std::string* PackB5::mutable_unverifiedemail() {
		// @@protoc_insertion_point(field_mutable:ProtobufPackets.PackB5.unverifiedEmail)
		return unverifiedemail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline ::std::string* PackB5::release_unverifiedemail() {
		// @@protoc_insertion_point(field_release:ProtobufPackets.PackB5.unverifiedEmail)

		return unverifiedemail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void PackB5::set_allocated_unverifiedemail(::std::string* unverifiedemail) {
		if (unverifiedemail != NULL) {
		}
		else {
		}
		unverifiedemail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unverifiedemail);
		// @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackB5.unverifiedEmail)
	}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// -------------------------------------------------------------------

	// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtobufPackets

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BBPacks_2eproto__INCLUDED
