// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BBPacks.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BBPacks.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtobufPackets {
class PackA0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackA0> {};
PackA0DefaultTypeInternal _PackA0_default_instance_;
class PackA1DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackA1> {};
PackA1DefaultTypeInternal _PackA1_default_instance_;
class PackA2DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackA2> {};
PackA2DefaultTypeInternal _PackA2_default_instance_;
class PackA3DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackA3> {};
PackA3DefaultTypeInternal _PackA3_default_instance_;
class PackA4DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackA4> {};
PackA4DefaultTypeInternal _PackA4_default_instance_;
class PackB0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackB0> {};
PackB0DefaultTypeInternal _PackB0_default_instance_;
class PackB1DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackB1> {};
PackB1DefaultTypeInternal _PackB1_default_instance_;
class PackD0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackD0> {};
PackD0DefaultTypeInternal _PackD0_default_instance_;
class PackD1DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackD1> {};
PackD1DefaultTypeInternal _PackD1_default_instance_;
class PackE0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackE0> {};
PackE0DefaultTypeInternal _PackE0_default_instance_;
class PackE1DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackE1> {};
PackE1DefaultTypeInternal _PackE1_default_instance_;
class PackF0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackF0> {};
PackF0DefaultTypeInternal _PackF0_default_instance_;
class PackF1DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackF1> {};
PackF1DefaultTypeInternal _PackF1_default_instance_;
class PackG0DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackG0> {};
PackG0DefaultTypeInternal _PackG0_default_instance_;
class PackG1DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackG1> {};
PackG1DefaultTypeInternal _PackG1_default_instance_;
class PackG2DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PackG2> {};
PackG2DefaultTypeInternal _PackG2_default_instance_;

namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace


const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto() GOOGLE_ATTRIBUTE_COLD;
const ::google::protobuf::uint32* protobuf_Offsets_BBPacks_2eproto() {
  static const ::google::protobuf::uint32 offsets[] = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, menuitems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA0, name_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA1, ascore_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA2, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA2, confirm_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA3, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA3, confirm_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA4, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA4, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackA4, ordertoken_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB0, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB0, confirm_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB1, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB1, itemname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackB1, itemprice_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD0, pwd_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackD1, token_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, pwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE0, email_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE1, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackE1, msg_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF0, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF0, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF0, token_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackF1, success_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG0, confirm_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, itemnames_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, itemamounts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, totalcost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG1, ordertime_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG2, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG2, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PackG2, ostate_),
  };
  return offsets;
}

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PackA0)},
  { 8, -1, sizeof(PackA1)},
  { 13, -1, sizeof(PackA2)},
  { 18, -1, sizeof(PackA3)},
  { 23, -1, sizeof(PackA4)},
  { 29, -1, sizeof(PackB0)},
  { 34, -1, sizeof(PackB1)},
  { 41, -1, sizeof(PackD0)},
  { 47, -1, sizeof(PackD1)},
  { 54, -1, sizeof(PackE0)},
  { 61, -1, sizeof(PackE1)},
  { 67, -1, sizeof(PackF0)},
  { 73, -1, sizeof(PackF1)},
  { 78, -1, sizeof(PackG0)},
  { 83, -1, sizeof(PackG1)},
  { 95, -1, sizeof(PackG2)},
};

static const ::google::protobuf::internal::DefaultInstanceData file_default_instances[] = {
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackA0_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackA1_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackA2_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackA3_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackA4_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackB0_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackB1_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackD0_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackD1_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackE0_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackE1_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackF0_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackF1_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackG0_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackG1_default_instance_), NULL},
  {reinterpret_cast<const ::google::protobuf::Message*>(&_PackG2_default_instance_), NULL},
};

namespace {

void protobuf_AssignDescriptors() {
  protobuf_AddDesc_BBPacks_2eproto();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "BBPacks.proto", schemas, file_default_instances, protobuf_Offsets_BBPacks_2eproto(), factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace

void protobuf_ShutdownFile_BBPacks_2eproto() {
  _PackA0_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PackA1_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PackA2_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PackA3_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PackA4_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PackB0_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _PackB1_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PackD0_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _PackD1_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _PackE0_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _PackE1_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _PackF0_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _PackF1_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _PackG0_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _PackG1_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _PackG2_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
}

void protobuf_InitDefaults_BBPacks_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PackA0_default_instance_.DefaultConstruct();
  _PackA1_default_instance_.DefaultConstruct();
  _PackA2_default_instance_.DefaultConstruct();
  _PackA3_default_instance_.DefaultConstruct();
  _PackA4_default_instance_.DefaultConstruct();
  _PackB0_default_instance_.DefaultConstruct();
  _PackB1_default_instance_.DefaultConstruct();
  _PackD0_default_instance_.DefaultConstruct();
  _PackD1_default_instance_.DefaultConstruct();
  _PackE0_default_instance_.DefaultConstruct();
  _PackE1_default_instance_.DefaultConstruct();
  _PackF0_default_instance_.DefaultConstruct();
  _PackF1_default_instance_.DefaultConstruct();
  _PackG0_default_instance_.DefaultConstruct();
  _PackG1_default_instance_.DefaultConstruct();
  _PackG2_default_instance_.DefaultConstruct();
}

void protobuf_InitDefaults_BBPacks_2eproto() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_InitDefaults_BBPacks_2eproto_impl);
}
void protobuf_AddDesc_BBPacks_2eproto_impl() {
  protobuf_InitDefaults_BBPacks_2eproto();
  static const char descriptor[] = {
      "\n\rBBPacks.proto\022\017ProtobufPackets\"N\n\006Pack"
      "A0\022\021\n\tlongitude\030\001 \001(\001\022\020\n\010latitude\030\002 \001(\001\022"
      "\021\n\tmenuItems\030\003 \003(\r\022\014\n\004name\030\004 \001(\t\"\030\n\006Pack"
      "A1\022\016\n\006aScore\030\001 \001(\r\"\031\n\006PackA2\022\017\n\007confirm\030"
      "\001 \001(\010\"\031\n\006PackA3\022\017\n\007confirm\030\001 \001(\010\"-\n\006Pack"
      "A4\022\017\n\007success\030\001 \001(\010\022\022\n\norderToken\030\002 \001(\t\""
      "\031\n\006PackB0\022\017\n\007confirm\030\001 \001(\010\"=\n\006PackB1\022\016\n\006"
      "itemID\030\001 \003(\r\022\020\n\010itemName\030\002 \003(\t\022\021\n\titemPr"
      "ice\030\003 \003(\002\"\'\n\006PackD0\022\020\n\010userName\030\001 \001(\t\022\013\n"
      "\003pwd\030\002 \001(\t\"7\n\006PackD1\022\017\n\007success\030\001 \001(\010\022\r\n"
      "\005error\030\002 \001(\t\022\r\n\005token\030\003 \001(\t\"6\n\006PackE0\022\020\n"
      "\010userName\030\001 \001(\t\022\013\n\003pwd\030\002 \001(\t\022\r\n\005email\030\003 "
      "\001(\t\"&\n\006PackE1\022\017\n\007success\030\001 \001(\010\022\013\n\003msg\030\002 "
      "\001(\t\")\n\006PackF0\022\020\n\010userName\030\001 \001(\t\022\r\n\005token"
      "\030\002 \001(\t\"\031\n\006PackF1\022\017\n\007success\030\001 \001(\010\"\031\n\006Pac"
      "kG0\022\017\n\007confirm\030\001 \001(\010\"\235\001\n\006PackG1\022\017\n\007succe"
      "ss\030\001 \001(\010\022\021\n\titemNames\030\002 \003(\t\022\023\n\013itemAmoun"
      "ts\030\003 \003(\r\022\021\n\ttotalCost\030\004 \001(\002\022\021\n\tlongitude"
      "\030\005 \001(\001\022\020\n\010latitude\030\006 \001(\001\022\017\n\007orderID\030\007 \001("
      "\r\022\021\n\torderTime\030\010 \001(\005\")\n\006PackG2\022\017\n\007orderI"
      "D\030\001 \001(\r\022\016\n\006oState\030\002 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 831);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BBPacks.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BBPacks_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_BBPacks_2eproto_once_);
void protobuf_AddDesc_BBPacks_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_BBPacks_2eproto_once_,
                 &protobuf_AddDesc_BBPacks_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BBPacks_2eproto {
  StaticDescriptorInitializer_BBPacks_2eproto() {
    protobuf_AddDesc_BBPacks_2eproto();
  }
} static_descriptor_initializer_BBPacks_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackA0::kLongitudeFieldNumber;
const int PackA0::kLatitudeFieldNumber;
const int PackA0::kMenuItemsFieldNumber;
const int PackA0::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackA0::PackA0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackA0)
}
PackA0::PackA0(const PackA0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      menuitems_(from.menuitems_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&longitude_, &from.longitude_,
    reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackA0)
}

void PackA0::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&longitude_, 0, reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
  _cached_size_ = 0;
}

PackA0::~PackA0() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackA0)
  SharedDtor();
}

void PackA0::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackA0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackA0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0].descriptor;
}

const PackA0& PackA0::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackA0* PackA0::New(::google::protobuf::Arena* arena) const {
  PackA0* n = new PackA0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackA0::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackA0)
  menuitems_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&longitude_, 0, reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
}

bool PackA0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackA0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double longitude = 1;
      case 1: {
        if (tag == 9u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 menuItems = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_menuitems())));
        } else if (tag == 24u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_menuitems())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackA0.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackA0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackA0)
  return false;
#undef DO_
}

void PackA0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackA0)
  // double longitude = 1;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->longitude(), output);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->latitude(), output);
  }

  // repeated uint32 menuItems = 3;
  if (this->menuitems_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_menuitems_cached_byte_size_);
  }
  for (int i = 0; i < this->menuitems_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->menuitems(i), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackA0.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackA0)
}

::google::protobuf::uint8* PackA0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackA0)
  // double longitude = 1;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->longitude(), target);
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->latitude(), target);
  }

  // repeated uint32 menuItems = 3;
  if (this->menuitems_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _menuitems_cached_byte_size_, target);
  }
  for (int i = 0; i < this->menuitems_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->menuitems(i), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackA0.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackA0)
  return target;
}

size_t PackA0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackA0)
  size_t total_size = 0;

  // repeated uint32 menuItems = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->menuitems_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->menuitems(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _menuitems_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // double longitude = 1;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 2;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackA0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackA0)
  GOOGLE_DCHECK_NE(&from, this);
  const PackA0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackA0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackA0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackA0)
    MergeFrom(*source);
  }
}

void PackA0::MergeFrom(const PackA0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackA0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  menuitems_.MergeFrom(from.menuitems_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
}

void PackA0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackA0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackA0::CopyFrom(const PackA0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackA0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackA0::IsInitialized() const {
  return true;
}

void PackA0::Swap(PackA0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackA0::InternalSwap(PackA0* other) {
  menuitems_.UnsafeArenaSwap(&other->menuitems_);
  name_.Swap(&other->name_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackA0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA0

// double longitude = 1;
void PackA0::clear_longitude() {
  longitude_ = 0;
}
double PackA0::longitude() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.longitude)
  return longitude_;
}
void PackA0::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.longitude)
}

// double latitude = 2;
void PackA0::clear_latitude() {
  latitude_ = 0;
}
double PackA0::latitude() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.latitude)
  return latitude_;
}
void PackA0::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.latitude)
}

// repeated uint32 menuItems = 3;
int PackA0::menuitems_size() const {
  return menuitems_.size();
}
void PackA0::clear_menuitems() {
  menuitems_.Clear();
}
::google::protobuf::uint32 PackA0::menuitems(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.menuItems)
  return menuitems_.Get(index);
}
void PackA0::set_menuitems(int index, ::google::protobuf::uint32 value) {
  menuitems_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.menuItems)
}
void PackA0::add_menuitems(::google::protobuf::uint32 value) {
  menuitems_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufPackets.PackA0.menuItems)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackA0::menuitems() const {
  // @@protoc_insertion_point(field_list:ProtobufPackets.PackA0.menuItems)
  return menuitems_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackA0::mutable_menuitems() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufPackets.PackA0.menuItems)
  return &menuitems_;
}

// string name = 4;
void PackA0::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackA0::name() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA0.name)
  return name_.GetNoArena();
}
void PackA0::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA0.name)
}
void PackA0::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA0.name)
}
void PackA0::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA0.name)
}
::std::string* PackA0::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA0.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackA0::release_name() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackA0.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackA0::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA0.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackA1::kAScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackA1::PackA1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackA1)
}
PackA1::PackA1(const PackA1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ascore_ = from.ascore_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackA1)
}

void PackA1::SharedCtor() {
  ascore_ = 0u;
  _cached_size_ = 0;
}

PackA1::~PackA1() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackA1)
  SharedDtor();
}

void PackA1::SharedDtor() {
}

void PackA1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackA1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1].descriptor;
}

const PackA1& PackA1::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackA1* PackA1::New(::google::protobuf::Arena* arena) const {
  PackA1* n = new PackA1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackA1::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackA1)
  ascore_ = 0u;
}

bool PackA1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackA1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 aScore = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ascore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackA1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackA1)
  return false;
#undef DO_
}

void PackA1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackA1)
  // uint32 aScore = 1;
  if (this->ascore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ascore(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackA1)
}

::google::protobuf::uint8* PackA1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackA1)
  // uint32 aScore = 1;
  if (this->ascore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ascore(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackA1)
  return target;
}

size_t PackA1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackA1)
  size_t total_size = 0;

  // uint32 aScore = 1;
  if (this->ascore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ascore());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackA1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackA1)
  GOOGLE_DCHECK_NE(&from, this);
  const PackA1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackA1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackA1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackA1)
    MergeFrom(*source);
  }
}

void PackA1::MergeFrom(const PackA1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackA1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ascore() != 0) {
    set_ascore(from.ascore());
  }
}

void PackA1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackA1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackA1::CopyFrom(const PackA1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackA1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackA1::IsInitialized() const {
  return true;
}

void PackA1::Swap(PackA1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackA1::InternalSwap(PackA1* other) {
  std::swap(ascore_, other->ascore_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackA1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA1

// uint32 aScore = 1;
void PackA1::clear_ascore() {
  ascore_ = 0u;
}
::google::protobuf::uint32 PackA1::ascore() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA1.aScore)
  return ascore_;
}
void PackA1::set_ascore(::google::protobuf::uint32 value) {
  
  ascore_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA1.aScore)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackA2::kConfirmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackA2::PackA2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackA2)
}
PackA2::PackA2(const PackA2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  confirm_ = from.confirm_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackA2)
}

void PackA2::SharedCtor() {
  confirm_ = false;
  _cached_size_ = 0;
}

PackA2::~PackA2() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackA2)
  SharedDtor();
}

void PackA2::SharedDtor() {
}

void PackA2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackA2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2].descriptor;
}

const PackA2& PackA2::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackA2* PackA2::New(::google::protobuf::Arena* arena) const {
  PackA2* n = new PackA2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackA2::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackA2)
  confirm_ = false;
}

bool PackA2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackA2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool confirm = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &confirm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackA2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackA2)
  return false;
#undef DO_
}

void PackA2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackA2)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->confirm(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackA2)
}

::google::protobuf::uint8* PackA2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackA2)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->confirm(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackA2)
  return target;
}

size_t PackA2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackA2)
  size_t total_size = 0;

  // bool confirm = 1;
  if (this->confirm() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackA2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackA2)
  GOOGLE_DCHECK_NE(&from, this);
  const PackA2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackA2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackA2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackA2)
    MergeFrom(*source);
  }
}

void PackA2::MergeFrom(const PackA2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackA2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.confirm() != 0) {
    set_confirm(from.confirm());
  }
}

void PackA2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackA2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackA2::CopyFrom(const PackA2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackA2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackA2::IsInitialized() const {
  return true;
}

void PackA2::Swap(PackA2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackA2::InternalSwap(PackA2* other) {
  std::swap(confirm_, other->confirm_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackA2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA2

// bool confirm = 1;
void PackA2::clear_confirm() {
  confirm_ = false;
}
bool PackA2::confirm() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA2.confirm)
  return confirm_;
}
void PackA2::set_confirm(bool value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA2.confirm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackA3::kConfirmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackA3::PackA3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackA3)
}
PackA3::PackA3(const PackA3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  confirm_ = from.confirm_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackA3)
}

void PackA3::SharedCtor() {
  confirm_ = false;
  _cached_size_ = 0;
}

PackA3::~PackA3() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackA3)
  SharedDtor();
}

void PackA3::SharedDtor() {
}

void PackA3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackA3::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3].descriptor;
}

const PackA3& PackA3::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackA3* PackA3::New(::google::protobuf::Arena* arena) const {
  PackA3* n = new PackA3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackA3::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackA3)
  confirm_ = false;
}

bool PackA3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackA3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool confirm = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &confirm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackA3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackA3)
  return false;
#undef DO_
}

void PackA3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackA3)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->confirm(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackA3)
}

::google::protobuf::uint8* PackA3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackA3)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->confirm(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackA3)
  return target;
}

size_t PackA3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackA3)
  size_t total_size = 0;

  // bool confirm = 1;
  if (this->confirm() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackA3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackA3)
  GOOGLE_DCHECK_NE(&from, this);
  const PackA3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackA3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackA3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackA3)
    MergeFrom(*source);
  }
}

void PackA3::MergeFrom(const PackA3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackA3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.confirm() != 0) {
    set_confirm(from.confirm());
  }
}

void PackA3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackA3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackA3::CopyFrom(const PackA3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackA3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackA3::IsInitialized() const {
  return true;
}

void PackA3::Swap(PackA3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackA3::InternalSwap(PackA3* other) {
  std::swap(confirm_, other->confirm_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackA3::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA3

// bool confirm = 1;
void PackA3::clear_confirm() {
  confirm_ = false;
}
bool PackA3::confirm() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA3.confirm)
  return confirm_;
}
void PackA3::set_confirm(bool value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA3.confirm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackA4::kSuccessFieldNumber;
const int PackA4::kOrderTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackA4::PackA4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackA4)
}
PackA4::PackA4(const PackA4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ordertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ordertoken().size() > 0) {
    ordertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordertoken_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackA4)
}

void PackA4::SharedCtor() {
  ordertoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _cached_size_ = 0;
}

PackA4::~PackA4() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackA4)
  SharedDtor();
}

void PackA4::SharedDtor() {
  ordertoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackA4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackA4::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4].descriptor;
}

const PackA4& PackA4::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackA4* PackA4::New(::google::protobuf::Arena* arena) const {
  PackA4* n = new PackA4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackA4::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackA4)
  ordertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

bool PackA4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackA4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orderToken = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ordertoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ordertoken().data(), this->ordertoken().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackA4.orderToken"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackA4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackA4)
  return false;
#undef DO_
}

void PackA4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackA4)
  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string orderToken = 2;
  if (this->ordertoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ordertoken().data(), this->ordertoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackA4.orderToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ordertoken(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackA4)
}

::google::protobuf::uint8* PackA4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackA4)
  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string orderToken = 2;
  if (this->ordertoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ordertoken().data(), this->ordertoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackA4.orderToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ordertoken(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackA4)
  return target;
}

size_t PackA4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackA4)
  size_t total_size = 0;

  // string orderToken = 2;
  if (this->ordertoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ordertoken());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackA4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackA4)
  GOOGLE_DCHECK_NE(&from, this);
  const PackA4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackA4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackA4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackA4)
    MergeFrom(*source);
  }
}

void PackA4::MergeFrom(const PackA4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackA4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ordertoken().size() > 0) {

    ordertoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordertoken_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void PackA4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackA4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackA4::CopyFrom(const PackA4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackA4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackA4::IsInitialized() const {
  return true;
}

void PackA4::Swap(PackA4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackA4::InternalSwap(PackA4* other) {
  ordertoken_.Swap(&other->ordertoken_);
  std::swap(success_, other->success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackA4::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackA4

// bool success = 1;
void PackA4::clear_success() {
  success_ = false;
}
bool PackA4::success() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA4.success)
  return success_;
}
void PackA4::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA4.success)
}

// string orderToken = 2;
void PackA4::clear_ordertoken() {
  ordertoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackA4::ordertoken() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackA4.orderToken)
  return ordertoken_.GetNoArena();
}
void PackA4::set_ordertoken(const ::std::string& value) {
  
  ordertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackA4.orderToken)
}
void PackA4::set_ordertoken(const char* value) {
  
  ordertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackA4.orderToken)
}
void PackA4::set_ordertoken(const char* value, size_t size) {
  
  ordertoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackA4.orderToken)
}
::std::string* PackA4::mutable_ordertoken() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackA4.orderToken)
  return ordertoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackA4::release_ordertoken() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackA4.orderToken)
  
  return ordertoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackA4::set_allocated_ordertoken(::std::string* ordertoken) {
  if (ordertoken != NULL) {
    
  } else {
    
  }
  ordertoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ordertoken);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackA4.orderToken)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackB0::kConfirmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackB0::PackB0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackB0)
}
PackB0::PackB0(const PackB0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  confirm_ = from.confirm_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackB0)
}

void PackB0::SharedCtor() {
  confirm_ = false;
  _cached_size_ = 0;
}

PackB0::~PackB0() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackB0)
  SharedDtor();
}

void PackB0::SharedDtor() {
}

void PackB0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackB0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5].descriptor;
}

const PackB0& PackB0::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackB0* PackB0::New(::google::protobuf::Arena* arena) const {
  PackB0* n = new PackB0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackB0::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackB0)
  confirm_ = false;
}

bool PackB0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackB0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool confirm = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &confirm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackB0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackB0)
  return false;
#undef DO_
}

void PackB0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackB0)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->confirm(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackB0)
}

::google::protobuf::uint8* PackB0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackB0)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->confirm(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackB0)
  return target;
}

size_t PackB0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackB0)
  size_t total_size = 0;

  // bool confirm = 1;
  if (this->confirm() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackB0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackB0)
  GOOGLE_DCHECK_NE(&from, this);
  const PackB0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackB0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackB0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackB0)
    MergeFrom(*source);
  }
}

void PackB0::MergeFrom(const PackB0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackB0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.confirm() != 0) {
    set_confirm(from.confirm());
  }
}

void PackB0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackB0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackB0::CopyFrom(const PackB0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackB0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackB0::IsInitialized() const {
  return true;
}

void PackB0::Swap(PackB0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackB0::InternalSwap(PackB0* other) {
  std::swap(confirm_, other->confirm_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackB0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackB0

// bool confirm = 1;
void PackB0::clear_confirm() {
  confirm_ = false;
}
bool PackB0::confirm() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackB0.confirm)
  return confirm_;
}
void PackB0::set_confirm(bool value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackB0.confirm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackB1::kItemIDFieldNumber;
const int PackB1::kItemNameFieldNumber;
const int PackB1::kItemPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackB1::PackB1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackB1)
}
PackB1::PackB1(const PackB1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      itemid_(from.itemid_),
      itemname_(from.itemname_),
      itemprice_(from.itemprice_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackB1)
}

void PackB1::SharedCtor() {
  _cached_size_ = 0;
}

PackB1::~PackB1() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackB1)
  SharedDtor();
}

void PackB1::SharedDtor() {
}

void PackB1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackB1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6].descriptor;
}

const PackB1& PackB1::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackB1* PackB1::New(::google::protobuf::Arena* arena) const {
  PackB1* n = new PackB1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackB1::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackB1)
  itemid_.Clear();
  itemname_.Clear();
  itemprice_.Clear();
}

bool PackB1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackB1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 itemID = 1;
      case 1: {
        if (tag == 10u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_itemid())));
        } else if (tag == 8u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_itemid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string itemName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_itemname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->itemname(this->itemname_size() - 1).data(),
            this->itemname(this->itemname_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackB1.itemName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float itemPrice = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_itemprice())));
        } else if (tag == 29u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_itemprice())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackB1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackB1)
  return false;
#undef DO_
}

void PackB1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackB1)
  // repeated uint32 itemID = 1;
  if (this->itemid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_itemid_cached_byte_size_);
  }
  for (int i = 0; i < this->itemid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->itemid(i), output);
  }

  // repeated string itemName = 2;
  for (int i = 0; i < this->itemname_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemname(i).data(), this->itemname(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackB1.itemName");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->itemname(i), output);
  }

  // repeated float itemPrice = 3;
  if (this->itemprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_itemprice_cached_byte_size_);
  }
  for (int i = 0; i < this->itemprice_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->itemprice(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackB1)
}

::google::protobuf::uint8* PackB1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackB1)
  // repeated uint32 itemID = 1;
  if (this->itemid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _itemid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->itemid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->itemid(i), target);
  }

  // repeated string itemName = 2;
  for (int i = 0; i < this->itemname_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemname(i).data(), this->itemname(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackB1.itemName");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->itemname(i), target);
  }

  // repeated float itemPrice = 3;
  if (this->itemprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _itemprice_cached_byte_size_, target);
  }
  for (int i = 0; i < this->itemprice_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->itemprice(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackB1)
  return target;
}

size_t PackB1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackB1)
  size_t total_size = 0;

  // repeated uint32 itemID = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->itemid_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->itemid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _itemid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string itemName = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->itemname_size());
  for (int i = 0; i < this->itemname_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->itemname(i));
  }

  // repeated float itemPrice = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->itemprice_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _itemprice_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackB1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackB1)
  GOOGLE_DCHECK_NE(&from, this);
  const PackB1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackB1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackB1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackB1)
    MergeFrom(*source);
  }
}

void PackB1::MergeFrom(const PackB1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackB1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  itemid_.MergeFrom(from.itemid_);
  itemname_.MergeFrom(from.itemname_);
  itemprice_.MergeFrom(from.itemprice_);
}

void PackB1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackB1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackB1::CopyFrom(const PackB1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackB1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackB1::IsInitialized() const {
  return true;
}

void PackB1::Swap(PackB1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackB1::InternalSwap(PackB1* other) {
  itemid_.UnsafeArenaSwap(&other->itemid_);
  itemname_.UnsafeArenaSwap(&other->itemname_);
  itemprice_.UnsafeArenaSwap(&other->itemprice_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackB1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackB1

// repeated uint32 itemID = 1;
int PackB1::itemid_size() const {
  return itemid_.size();
}
void PackB1::clear_itemid() {
  itemid_.Clear();
}
::google::protobuf::uint32 PackB1::itemid(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackB1.itemID)
  return itemid_.Get(index);
}
void PackB1::set_itemid(int index, ::google::protobuf::uint32 value) {
  itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackB1.itemID)
}
void PackB1::add_itemid(::google::protobuf::uint32 value) {
  itemid_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufPackets.PackB1.itemID)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackB1::itemid() const {
  // @@protoc_insertion_point(field_list:ProtobufPackets.PackB1.itemID)
  return itemid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackB1::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufPackets.PackB1.itemID)
  return &itemid_;
}

// repeated string itemName = 2;
int PackB1::itemname_size() const {
  return itemname_.size();
}
void PackB1::clear_itemname() {
  itemname_.Clear();
}
const ::std::string& PackB1::itemname(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackB1.itemName)
  return itemname_.Get(index);
}
::std::string* PackB1::mutable_itemname(int index) {
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackB1.itemName)
  return itemname_.Mutable(index);
}
void PackB1::set_itemname(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackB1.itemName)
  itemname_.Mutable(index)->assign(value);
}
void PackB1::set_itemname(int index, const char* value) {
  itemname_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackB1.itemName)
}
void PackB1::set_itemname(int index, const char* value, size_t size) {
  itemname_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackB1.itemName)
}
::std::string* PackB1::add_itemname() {
  // @@protoc_insertion_point(field_add_mutable:ProtobufPackets.PackB1.itemName)
  return itemname_.Add();
}
void PackB1::add_itemname(const ::std::string& value) {
  itemname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ProtobufPackets.PackB1.itemName)
}
void PackB1::add_itemname(const char* value) {
  itemname_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ProtobufPackets.PackB1.itemName)
}
void PackB1::add_itemname(const char* value, size_t size) {
  itemname_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ProtobufPackets.PackB1.itemName)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PackB1::itemname() const {
  // @@protoc_insertion_point(field_list:ProtobufPackets.PackB1.itemName)
  return itemname_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PackB1::mutable_itemname() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufPackets.PackB1.itemName)
  return &itemname_;
}

// repeated float itemPrice = 3;
int PackB1::itemprice_size() const {
  return itemprice_.size();
}
void PackB1::clear_itemprice() {
  itemprice_.Clear();
}
float PackB1::itemprice(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackB1.itemPrice)
  return itemprice_.Get(index);
}
void PackB1::set_itemprice(int index, float value) {
  itemprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackB1.itemPrice)
}
void PackB1::add_itemprice(float value) {
  itemprice_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufPackets.PackB1.itemPrice)
}
const ::google::protobuf::RepeatedField< float >&
PackB1::itemprice() const {
  // @@protoc_insertion_point(field_list:ProtobufPackets.PackB1.itemPrice)
  return itemprice_;
}
::google::protobuf::RepeatedField< float >*
PackB1::mutable_itemprice() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufPackets.PackB1.itemPrice)
  return &itemprice_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackD0::kUserNameFieldNumber;
const int PackD0::kPwdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackD0::PackD0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackD0)
}
PackD0::PackD0(const PackD0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackD0)
}

void PackD0::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PackD0::~PackD0() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackD0)
  SharedDtor();
}

void PackD0::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackD0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackD0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7].descriptor;
}

const PackD0& PackD0::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackD0* PackD0::New(::google::protobuf::Arena* arena) const {
  PackD0* n = new PackD0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackD0::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackD0)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PackD0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackD0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string userName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackD0.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackD0.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackD0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackD0)
  return false;
#undef DO_
}

void PackD0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackD0)
  // string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD0.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD0.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackD0)
}

::google::protobuf::uint8* PackD0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackD0)
  // string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD0.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD0.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackD0)
  return target;
}

size_t PackD0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackD0)
  size_t total_size = 0;

  // string userName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackD0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackD0)
  GOOGLE_DCHECK_NE(&from, this);
  const PackD0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackD0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackD0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackD0)
    MergeFrom(*source);
  }
}

void PackD0::MergeFrom(const PackD0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackD0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
}

void PackD0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackD0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackD0::CopyFrom(const PackD0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackD0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackD0::IsInitialized() const {
  return true;
}

void PackD0::Swap(PackD0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackD0::InternalSwap(PackD0* other) {
  username_.Swap(&other->username_);
  pwd_.Swap(&other->pwd_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackD0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackD0

// string userName = 1;
void PackD0::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackD0::username() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackD0.userName)
  return username_.GetNoArena();
}
void PackD0::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackD0.userName)
}
void PackD0::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackD0.userName)
}
void PackD0::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackD0.userName)
}
::std::string* PackD0::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackD0.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackD0::release_username() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackD0.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackD0::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackD0.userName)
}

// string pwd = 2;
void PackD0::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackD0::pwd() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackD0.pwd)
  return pwd_.GetNoArena();
}
void PackD0::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackD0.pwd)
}
void PackD0::set_pwd(const char* value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackD0.pwd)
}
void PackD0::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackD0.pwd)
}
::std::string* PackD0::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackD0.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackD0::release_pwd() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackD0.pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackD0::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackD0.pwd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackD1::kSuccessFieldNumber;
const int PackD1::kErrorFieldNumber;
const int PackD1::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackD1::PackD1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackD1)
}
PackD1::PackD1(const PackD1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackD1)
}

void PackD1::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _cached_size_ = 0;
}

PackD1::~PackD1() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackD1)
  SharedDtor();
}

void PackD1::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackD1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackD1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[8].descriptor;
}

const PackD1& PackD1::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackD1* PackD1::New(::google::protobuf::Arena* arena) const {
  PackD1* n = new PackD1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackD1::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackD1)
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

bool PackD1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackD1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackD1.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackD1.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackD1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackD1)
  return false;
#undef DO_
}

void PackD1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackD1)
  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD1.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD1.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackD1)
}

::google::protobuf::uint8* PackD1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackD1)
  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD1.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackD1.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackD1)
  return target;
}

size_t PackD1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackD1)
  size_t total_size = 0;

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackD1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackD1)
  GOOGLE_DCHECK_NE(&from, this);
  const PackD1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackD1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackD1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackD1)
    MergeFrom(*source);
  }
}

void PackD1::MergeFrom(const PackD1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackD1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void PackD1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackD1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackD1::CopyFrom(const PackD1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackD1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackD1::IsInitialized() const {
  return true;
}

void PackD1::Swap(PackD1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackD1::InternalSwap(PackD1* other) {
  error_.Swap(&other->error_);
  token_.Swap(&other->token_);
  std::swap(success_, other->success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackD1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackD1

// bool success = 1;
void PackD1::clear_success() {
  success_ = false;
}
bool PackD1::success() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackD1.success)
  return success_;
}
void PackD1::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackD1.success)
}

// string error = 2;
void PackD1::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackD1::error() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackD1.error)
  return error_.GetNoArena();
}
void PackD1::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackD1.error)
}
void PackD1::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackD1.error)
}
void PackD1::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackD1.error)
}
::std::string* PackD1::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackD1.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackD1::release_error() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackD1.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackD1::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackD1.error)
}

// string token = 3;
void PackD1::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackD1::token() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackD1.token)
  return token_.GetNoArena();
}
void PackD1::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackD1.token)
}
void PackD1::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackD1.token)
}
void PackD1::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackD1.token)
}
::std::string* PackD1::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackD1.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackD1::release_token() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackD1.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackD1::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackD1.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackE0::kUserNameFieldNumber;
const int PackE0::kPwdFieldNumber;
const int PackE0::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackE0::PackE0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackE0)
}
PackE0::PackE0(const PackE0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pwd().size() > 0) {
    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackE0)
}

void PackE0::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PackE0::~PackE0() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackE0)
  SharedDtor();
}

void PackE0::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackE0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackE0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[9].descriptor;
}

const PackE0& PackE0::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackE0* PackE0::New(::google::protobuf::Arena* arena) const {
  PackE0* n = new PackE0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackE0::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackE0)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PackE0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackE0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string userName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackE0.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pwd = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackE0.pwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackE0.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackE0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackE0)
  return false;
#undef DO_
}

void PackE0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackE0)
  // string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE0.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE0.pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE0.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackE0)
}

::google::protobuf::uint8* PackE0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackE0)
  // string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE0.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE0.pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE0.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackE0)
  return target;
}

size_t PackE0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackE0)
  size_t total_size = 0;

  // string userName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string pwd = 2;
  if (this->pwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pwd());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackE0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackE0)
  GOOGLE_DCHECK_NE(&from, this);
  const PackE0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackE0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackE0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackE0)
    MergeFrom(*source);
  }
}

void PackE0::MergeFrom(const PackE0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackE0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.pwd().size() > 0) {

    pwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwd_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
}

void PackE0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackE0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackE0::CopyFrom(const PackE0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackE0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackE0::IsInitialized() const {
  return true;
}

void PackE0::Swap(PackE0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackE0::InternalSwap(PackE0* other) {
  username_.Swap(&other->username_);
  pwd_.Swap(&other->pwd_);
  email_.Swap(&other->email_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackE0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackE0

// string userName = 1;
void PackE0::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackE0::username() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackE0.userName)
  return username_.GetNoArena();
}
void PackE0::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackE0.userName)
}
void PackE0::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackE0.userName)
}
void PackE0::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackE0.userName)
}
::std::string* PackE0::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackE0.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackE0::release_username() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackE0.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackE0::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackE0.userName)
}

// string pwd = 2;
void PackE0::clear_pwd() {
  pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackE0::pwd() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackE0.pwd)
  return pwd_.GetNoArena();
}
void PackE0::set_pwd(const ::std::string& value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackE0.pwd)
}
void PackE0::set_pwd(const char* value) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackE0.pwd)
}
void PackE0::set_pwd(const char* value, size_t size) {
  
  pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackE0.pwd)
}
::std::string* PackE0::mutable_pwd() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackE0.pwd)
  return pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackE0::release_pwd() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackE0.pwd)
  
  return pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackE0::set_allocated_pwd(::std::string* pwd) {
  if (pwd != NULL) {
    
  } else {
    
  }
  pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pwd);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackE0.pwd)
}

// string email = 3;
void PackE0::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackE0::email() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackE0.email)
  return email_.GetNoArena();
}
void PackE0::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackE0.email)
}
void PackE0::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackE0.email)
}
void PackE0::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackE0.email)
}
::std::string* PackE0::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackE0.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackE0::release_email() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackE0.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackE0::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackE0.email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackE1::kSuccessFieldNumber;
const int PackE1::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackE1::PackE1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackE1)
}
PackE1::PackE1(const PackE1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackE1)
}

void PackE1::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _cached_size_ = 0;
}

PackE1::~PackE1() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackE1)
  SharedDtor();
}

void PackE1::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackE1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackE1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[10].descriptor;
}

const PackE1& PackE1::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackE1* PackE1::New(::google::protobuf::Arena* arena) const {
  PackE1* n = new PackE1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackE1::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackE1)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

bool PackE1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackE1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackE1.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackE1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackE1)
  return false;
#undef DO_
}

void PackE1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackE1)
  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE1.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackE1)
}

::google::protobuf::uint8* PackE1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackE1)
  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackE1.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackE1)
  return target;
}

size_t PackE1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackE1)
  size_t total_size = 0;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackE1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackE1)
  GOOGLE_DCHECK_NE(&from, this);
  const PackE1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackE1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackE1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackE1)
    MergeFrom(*source);
  }
}

void PackE1::MergeFrom(const PackE1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackE1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void PackE1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackE1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackE1::CopyFrom(const PackE1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackE1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackE1::IsInitialized() const {
  return true;
}

void PackE1::Swap(PackE1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackE1::InternalSwap(PackE1* other) {
  msg_.Swap(&other->msg_);
  std::swap(success_, other->success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackE1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackE1

// bool success = 1;
void PackE1::clear_success() {
  success_ = false;
}
bool PackE1::success() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackE1.success)
  return success_;
}
void PackE1::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackE1.success)
}

// string msg = 2;
void PackE1::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackE1::msg() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackE1.msg)
  return msg_.GetNoArena();
}
void PackE1::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackE1.msg)
}
void PackE1::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackE1.msg)
}
void PackE1::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackE1.msg)
}
::std::string* PackE1::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackE1.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackE1::release_msg() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackE1.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackE1::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackE1.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackF0::kUserNameFieldNumber;
const int PackF0::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackF0::PackF0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackF0)
}
PackF0::PackF0(const PackF0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackF0)
}

void PackF0::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PackF0::~PackF0() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackF0)
  SharedDtor();
}

void PackF0::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackF0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackF0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[11].descriptor;
}

const PackF0& PackF0::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackF0* PackF0::New(::google::protobuf::Arena* arena) const {
  PackF0* n = new PackF0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackF0::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackF0)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PackF0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackF0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string userName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackF0.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackF0.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackF0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackF0)
  return false;
#undef DO_
}

void PackF0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackF0)
  // string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackF0.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackF0.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackF0)
}

::google::protobuf::uint8* PackF0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackF0)
  // string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackF0.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackF0.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackF0)
  return target;
}

size_t PackF0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackF0)
  size_t total_size = 0;

  // string userName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackF0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackF0)
  GOOGLE_DCHECK_NE(&from, this);
  const PackF0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackF0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackF0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackF0)
    MergeFrom(*source);
  }
}

void PackF0::MergeFrom(const PackF0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackF0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void PackF0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackF0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackF0::CopyFrom(const PackF0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackF0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackF0::IsInitialized() const {
  return true;
}

void PackF0::Swap(PackF0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackF0::InternalSwap(PackF0* other) {
  username_.Swap(&other->username_);
  token_.Swap(&other->token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackF0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackF0

// string userName = 1;
void PackF0::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackF0::username() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackF0.userName)
  return username_.GetNoArena();
}
void PackF0::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackF0.userName)
}
void PackF0::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackF0.userName)
}
void PackF0::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackF0.userName)
}
::std::string* PackF0::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackF0.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackF0::release_username() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackF0.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackF0::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackF0.userName)
}

// string token = 2;
void PackF0::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PackF0::token() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackF0.token)
  return token_.GetNoArena();
}
void PackF0::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackF0.token)
}
void PackF0::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackF0.token)
}
void PackF0::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackF0.token)
}
::std::string* PackF0::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackF0.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PackF0::release_token() {
  // @@protoc_insertion_point(field_release:ProtobufPackets.PackF0.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PackF0::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:ProtobufPackets.PackF0.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackF1::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackF1::PackF1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackF1)
}
PackF1::PackF1(const PackF1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackF1)
}

void PackF1::SharedCtor() {
  success_ = false;
  _cached_size_ = 0;
}

PackF1::~PackF1() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackF1)
  SharedDtor();
}

void PackF1::SharedDtor() {
}

void PackF1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackF1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[12].descriptor;
}

const PackF1& PackF1::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackF1* PackF1::New(::google::protobuf::Arena* arena) const {
  PackF1* n = new PackF1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackF1::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackF1)
  success_ = false;
}

bool PackF1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackF1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackF1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackF1)
  return false;
#undef DO_
}

void PackF1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackF1)
  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackF1)
}

::google::protobuf::uint8* PackF1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackF1)
  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackF1)
  return target;
}

size_t PackF1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackF1)
  size_t total_size = 0;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackF1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackF1)
  GOOGLE_DCHECK_NE(&from, this);
  const PackF1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackF1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackF1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackF1)
    MergeFrom(*source);
  }
}

void PackF1::MergeFrom(const PackF1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackF1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void PackF1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackF1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackF1::CopyFrom(const PackF1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackF1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackF1::IsInitialized() const {
  return true;
}

void PackF1::Swap(PackF1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackF1::InternalSwap(PackF1* other) {
  std::swap(success_, other->success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackF1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackF1

// bool success = 1;
void PackF1::clear_success() {
  success_ = false;
}
bool PackF1::success() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackF1.success)
  return success_;
}
void PackF1::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackF1.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackG0::kConfirmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackG0::PackG0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackG0)
}
PackG0::PackG0(const PackG0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  confirm_ = from.confirm_;
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackG0)
}

void PackG0::SharedCtor() {
  confirm_ = false;
  _cached_size_ = 0;
}

PackG0::~PackG0() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackG0)
  SharedDtor();
}

void PackG0::SharedDtor() {
}

void PackG0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackG0::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[13].descriptor;
}

const PackG0& PackG0::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackG0* PackG0::New(::google::protobuf::Arena* arena) const {
  PackG0* n = new PackG0;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackG0::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackG0)
  confirm_ = false;
}

bool PackG0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackG0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool confirm = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &confirm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackG0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackG0)
  return false;
#undef DO_
}

void PackG0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackG0)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->confirm(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackG0)
}

::google::protobuf::uint8* PackG0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackG0)
  // bool confirm = 1;
  if (this->confirm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->confirm(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackG0)
  return target;
}

size_t PackG0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackG0)
  size_t total_size = 0;

  // bool confirm = 1;
  if (this->confirm() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackG0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackG0)
  GOOGLE_DCHECK_NE(&from, this);
  const PackG0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackG0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackG0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackG0)
    MergeFrom(*source);
  }
}

void PackG0::MergeFrom(const PackG0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackG0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.confirm() != 0) {
    set_confirm(from.confirm());
  }
}

void PackG0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackG0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackG0::CopyFrom(const PackG0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackG0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackG0::IsInitialized() const {
  return true;
}

void PackG0::Swap(PackG0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackG0::InternalSwap(PackG0* other) {
  std::swap(confirm_, other->confirm_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackG0::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackG0

// bool confirm = 1;
void PackG0::clear_confirm() {
  confirm_ = false;
}
bool PackG0::confirm() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG0.confirm)
  return confirm_;
}
void PackG0::set_confirm(bool value) {
  
  confirm_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG0.confirm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackG1::kSuccessFieldNumber;
const int PackG1::kItemNamesFieldNumber;
const int PackG1::kItemAmountsFieldNumber;
const int PackG1::kTotalCostFieldNumber;
const int PackG1::kLongitudeFieldNumber;
const int PackG1::kLatitudeFieldNumber;
const int PackG1::kOrderIDFieldNumber;
const int PackG1::kOrderTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackG1::PackG1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackG1)
}
PackG1::PackG1(const PackG1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      itemnames_(from.itemnames_),
      itemamounts_(from.itemamounts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    reinterpret_cast<char*>(&ordertime_) -
    reinterpret_cast<char*>(&success_) + sizeof(ordertime_));
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackG1)
}

void PackG1::SharedCtor() {
  ::memset(&success_, 0, reinterpret_cast<char*>(&ordertime_) -
    reinterpret_cast<char*>(&success_) + sizeof(ordertime_));
  _cached_size_ = 0;
}

PackG1::~PackG1() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackG1)
  SharedDtor();
}

void PackG1::SharedDtor() {
}

void PackG1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackG1::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[14].descriptor;
}

const PackG1& PackG1::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackG1* PackG1::New(::google::protobuf::Arena* arena) const {
  PackG1* n = new PackG1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackG1::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackG1)
  itemnames_.Clear();
  itemamounts_.Clear();
  ::memset(&success_, 0, reinterpret_cast<char*>(&ordertime_) -
    reinterpret_cast<char*>(&success_) + sizeof(ordertime_));
}

bool PackG1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackG1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string itemNames = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_itemnames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->itemnames(this->itemnames_size() - 1).data(),
            this->itemnames(this->itemnames_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufPackets.PackG1.itemNames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 itemAmounts = 3;
      case 3: {
        if (tag == 26u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_itemamounts())));
        } else if (tag == 24u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_itemamounts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float totalCost = 4;
      case 4: {
        if (tag == 37u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &totalcost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double longitude = 5;
      case 5: {
        if (tag == 41u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double latitude = 6;
      case 6: {
        if (tag == 49u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 orderID = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 orderTime = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackG1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackG1)
  return false;
#undef DO_
}

void PackG1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackG1)
  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // repeated string itemNames = 2;
  for (int i = 0; i < this->itemnames_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemnames(i).data(), this->itemnames(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackG1.itemNames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->itemnames(i), output);
  }

  // repeated uint32 itemAmounts = 3;
  if (this->itemamounts_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_itemamounts_cached_byte_size_);
  }
  for (int i = 0; i < this->itemamounts_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->itemamounts(i), output);
  }

  // float totalCost = 4;
  if (this->totalcost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->totalcost(), output);
  }

  // double longitude = 5;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->longitude(), output);
  }

  // double latitude = 6;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->latitude(), output);
  }

  // uint32 orderID = 7;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->orderid(), output);
  }

  // int32 orderTime = 8;
  if (this->ordertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->ordertime(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackG1)
}

::google::protobuf::uint8* PackG1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackG1)
  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // repeated string itemNames = 2;
  for (int i = 0; i < this->itemnames_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->itemnames(i).data(), this->itemnames(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufPackets.PackG1.itemNames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->itemnames(i), target);
  }

  // repeated uint32 itemAmounts = 3;
  if (this->itemamounts_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _itemamounts_cached_byte_size_, target);
  }
  for (int i = 0; i < this->itemamounts_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->itemamounts(i), target);
  }

  // float totalCost = 4;
  if (this->totalcost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->totalcost(), target);
  }

  // double longitude = 5;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->longitude(), target);
  }

  // double latitude = 6;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->latitude(), target);
  }

  // uint32 orderID = 7;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->orderid(), target);
  }

  // int32 orderTime = 8;
  if (this->ordertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->ordertime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackG1)
  return target;
}

size_t PackG1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackG1)
  size_t total_size = 0;

  // repeated string itemNames = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->itemnames_size());
  for (int i = 0; i < this->itemnames_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->itemnames(i));
  }

  // repeated uint32 itemAmounts = 3;
  {
    size_t data_size = 0;
    unsigned int count = this->itemamounts_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->itemamounts(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _itemamounts_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // float totalCost = 4;
  if (this->totalcost() != 0) {
    total_size += 1 + 4;
  }

  // double longitude = 5;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // double latitude = 6;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // uint32 orderID = 7;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->orderid());
  }

  // int32 orderTime = 8;
  if (this->ordertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ordertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackG1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackG1)
  GOOGLE_DCHECK_NE(&from, this);
  const PackG1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackG1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackG1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackG1)
    MergeFrom(*source);
  }
}

void PackG1::MergeFrom(const PackG1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackG1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  itemnames_.MergeFrom(from.itemnames_);
  itemamounts_.MergeFrom(from.itemamounts_);
  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.totalcost() != 0) {
    set_totalcost(from.totalcost());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.ordertime() != 0) {
    set_ordertime(from.ordertime());
  }
}

void PackG1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackG1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackG1::CopyFrom(const PackG1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackG1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackG1::IsInitialized() const {
  return true;
}

void PackG1::Swap(PackG1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackG1::InternalSwap(PackG1* other) {
  itemnames_.UnsafeArenaSwap(&other->itemnames_);
  itemamounts_.UnsafeArenaSwap(&other->itemamounts_);
  std::swap(success_, other->success_);
  std::swap(totalcost_, other->totalcost_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(orderid_, other->orderid_);
  std::swap(ordertime_, other->ordertime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackG1::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackG1

// bool success = 1;
void PackG1::clear_success() {
  success_ = false;
}
bool PackG1::success() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.success)
  return success_;
}
void PackG1::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.success)
}

// repeated string itemNames = 2;
int PackG1::itemnames_size() const {
  return itemnames_.size();
}
void PackG1::clear_itemnames() {
  itemnames_.Clear();
}
const ::std::string& PackG1::itemnames(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.itemNames)
  return itemnames_.Get(index);
}
::std::string* PackG1::mutable_itemnames(int index) {
  // @@protoc_insertion_point(field_mutable:ProtobufPackets.PackG1.itemNames)
  return itemnames_.Mutable(index);
}
void PackG1::set_itemnames(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.itemNames)
  itemnames_.Mutable(index)->assign(value);
}
void PackG1::set_itemnames(int index, const char* value) {
  itemnames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ProtobufPackets.PackG1.itemNames)
}
void PackG1::set_itemnames(int index, const char* value, size_t size) {
  itemnames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProtobufPackets.PackG1.itemNames)
}
::std::string* PackG1::add_itemnames() {
  // @@protoc_insertion_point(field_add_mutable:ProtobufPackets.PackG1.itemNames)
  return itemnames_.Add();
}
void PackG1::add_itemnames(const ::std::string& value) {
  itemnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ProtobufPackets.PackG1.itemNames)
}
void PackG1::add_itemnames(const char* value) {
  itemnames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ProtobufPackets.PackG1.itemNames)
}
void PackG1::add_itemnames(const char* value, size_t size) {
  itemnames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ProtobufPackets.PackG1.itemNames)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PackG1::itemnames() const {
  // @@protoc_insertion_point(field_list:ProtobufPackets.PackG1.itemNames)
  return itemnames_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PackG1::mutable_itemnames() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufPackets.PackG1.itemNames)
  return &itemnames_;
}

// repeated uint32 itemAmounts = 3;
int PackG1::itemamounts_size() const {
  return itemamounts_.size();
}
void PackG1::clear_itemamounts() {
  itemamounts_.Clear();
}
::google::protobuf::uint32 PackG1::itemamounts(int index) const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.itemAmounts)
  return itemamounts_.Get(index);
}
void PackG1::set_itemamounts(int index, ::google::protobuf::uint32 value) {
  itemamounts_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.itemAmounts)
}
void PackG1::add_itemamounts(::google::protobuf::uint32 value) {
  itemamounts_.Add(value);
  // @@protoc_insertion_point(field_add:ProtobufPackets.PackG1.itemAmounts)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PackG1::itemamounts() const {
  // @@protoc_insertion_point(field_list:ProtobufPackets.PackG1.itemAmounts)
  return itemamounts_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PackG1::mutable_itemamounts() {
  // @@protoc_insertion_point(field_mutable_list:ProtobufPackets.PackG1.itemAmounts)
  return &itemamounts_;
}

// float totalCost = 4;
void PackG1::clear_totalcost() {
  totalcost_ = 0;
}
float PackG1::totalcost() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.totalCost)
  return totalcost_;
}
void PackG1::set_totalcost(float value) {
  
  totalcost_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.totalCost)
}

// double longitude = 5;
void PackG1::clear_longitude() {
  longitude_ = 0;
}
double PackG1::longitude() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.longitude)
  return longitude_;
}
void PackG1::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.longitude)
}

// double latitude = 6;
void PackG1::clear_latitude() {
  latitude_ = 0;
}
double PackG1::latitude() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.latitude)
  return latitude_;
}
void PackG1::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.latitude)
}

// uint32 orderID = 7;
void PackG1::clear_orderid() {
  orderid_ = 0u;
}
::google::protobuf::uint32 PackG1::orderid() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.orderID)
  return orderid_;
}
void PackG1::set_orderid(::google::protobuf::uint32 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.orderID)
}

// int32 orderTime = 8;
void PackG1::clear_ordertime() {
  ordertime_ = 0;
}
::google::protobuf::int32 PackG1::ordertime() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG1.orderTime)
  return ordertime_;
}
void PackG1::set_ordertime(::google::protobuf::int32 value) {
  
  ordertime_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG1.orderTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackG2::kOrderIDFieldNumber;
const int PackG2::kOStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackG2::PackG2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_InitDefaults_BBPacks_2eproto();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufPackets.PackG2)
}
PackG2::PackG2(const PackG2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&orderid_, &from.orderid_,
    reinterpret_cast<char*>(&ostate_) -
    reinterpret_cast<char*>(&orderid_) + sizeof(ostate_));
  // @@protoc_insertion_point(copy_constructor:ProtobufPackets.PackG2)
}

void PackG2::SharedCtor() {
  ::memset(&orderid_, 0, reinterpret_cast<char*>(&ostate_) -
    reinterpret_cast<char*>(&orderid_) + sizeof(ostate_));
  _cached_size_ = 0;
}

PackG2::~PackG2() {
  // @@protoc_insertion_point(destructor:ProtobufPackets.PackG2)
  SharedDtor();
}

void PackG2::SharedDtor() {
}

void PackG2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackG2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[15].descriptor;
}

const PackG2& PackG2::default_instance() {
  protobuf_InitDefaults_BBPacks_2eproto();
  return *internal_default_instance();
}

PackG2* PackG2::New(::google::protobuf::Arena* arena) const {
  PackG2* n = new PackG2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PackG2::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufPackets.PackG2)
  ::memset(&orderid_, 0, reinterpret_cast<char*>(&ostate_) -
    reinterpret_cast<char*>(&orderid_) + sizeof(ostate_));
}

bool PackG2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufPackets.PackG2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 orderID = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 oState = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ostate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufPackets.PackG2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufPackets.PackG2)
  return false;
#undef DO_
}

void PackG2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufPackets.PackG2)
  // uint32 orderID = 1;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->orderid(), output);
  }

  // uint32 oState = 2;
  if (this->ostate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ostate(), output);
  }

  // @@protoc_insertion_point(serialize_end:ProtobufPackets.PackG2)
}

::google::protobuf::uint8* PackG2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufPackets.PackG2)
  // uint32 orderID = 1;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->orderid(), target);
  }

  // uint32 oState = 2;
  if (this->ostate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ostate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ProtobufPackets.PackG2)
  return target;
}

size_t PackG2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufPackets.PackG2)
  size_t total_size = 0;

  // uint32 orderID = 1;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->orderid());
  }

  // uint32 oState = 2;
  if (this->ostate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ostate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackG2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufPackets.PackG2)
  GOOGLE_DCHECK_NE(&from, this);
  const PackG2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackG2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufPackets.PackG2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufPackets.PackG2)
    MergeFrom(*source);
  }
}

void PackG2::MergeFrom(const PackG2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufPackets.PackG2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.ostate() != 0) {
    set_ostate(from.ostate());
  }
}

void PackG2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufPackets.PackG2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackG2::CopyFrom(const PackG2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufPackets.PackG2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackG2::IsInitialized() const {
  return true;
}

void PackG2::Swap(PackG2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackG2::InternalSwap(PackG2* other) {
  std::swap(orderid_, other->orderid_);
  std::swap(ostate_, other->ostate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackG2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  return file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PackG2

// uint32 orderID = 1;
void PackG2::clear_orderid() {
  orderid_ = 0u;
}
::google::protobuf::uint32 PackG2::orderid() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG2.orderID)
  return orderid_;
}
void PackG2::set_orderid(::google::protobuf::uint32 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG2.orderID)
}

// uint32 oState = 2;
void PackG2::clear_ostate() {
  ostate_ = 0u;
}
::google::protobuf::uint32 PackG2::ostate() const {
  // @@protoc_insertion_point(field_get:ProtobufPackets.PackG2.oState)
  return ostate_;
}
void PackG2::set_ostate(::google::protobuf::uint32 value) {
  
  ostate_ = value;
  // @@protoc_insertion_point(field_set:ProtobufPackets.PackG2.oState)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtobufPackets

// @@protoc_insertion_point(global_scope)
